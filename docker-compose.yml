services:
  mysql:
    container_name: mysql
    image: mysql:9.2.0
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: yes
      MYSQL_DATABASE: agodaclone
    volumes:
      - mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - mysql
      - agoda-clone
    restart: unless-stopped

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: ""
    ports:
      - "8812:80"
    networks:
      - mysql
      - agoda-clone
    restart: unless-stopped

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - zipkin

  mongodb-booking:
    container_name: mongodb-booking
    image: mongo:8.0.5
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoadmin
      MONGO_INITDB_ROOT_PASSWORD: mongopass
      MONGO_INITDB_DATABASE: mongo-booking
    networks:
      - mongo
      - agoda-clone

  mongodb-notification:
    container_name: mongodb-notification
    image: mongo:8.0.5
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoadmin
      MONGO_INITDB_ROOT_PASSWORD: mongopass
      MONGO_INITDB_DATABASE: mongo-notification
    networks:
      - mongo
      - agoda-clone

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    ports:
      - "8813:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb-booking
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongoadmin
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongopass
      ME_CONFIG_BASICAUTH_USERNAME: mongoadmin
      ME_CONFIG_BASICAUTH_PASSWORD: mongopass
    depends_on:
      - mongodb-booking
    networks:
      - mongo
      - agoda-clone

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.9.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 1
    networks:
      - kafka
      - agoda-clone
    restart: unless-stopped

  broker:
    container_name: broker
    image: confluentinc/cp-kafka:7.9.0
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - kafka
      - agoda-clone
    restart: unless-stopped

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:v0.7.2
    ports:
      - "8814:8080"
    environment:
      KAFKA_CLUSTERS_NAME: local
      KAFKA_CLUSTERS_BOOTSTRAPSERVERS: broker:29092
      DYNAMIC_CONFIG_ENABLED: 'true'
    depends_on:
      - broker
    networks:
      - kafka
      - agoda-clone

  redis-authservice:
    image: redis:7.4.2
    container_name: redis-authservice
    ports:
      - "6379:6379"
    command: redis-server --requirepass R3d1s_4uth_S3rv1c3
    environment:
      - REDIS_PASSWORD=R3d1s_4uth_S3rv1c3
    networks:
      - agoda-clone
      - redis
    restart: unless-stopped

networks:
  mysql:
    driver: bridge
  zipkin:
    driver: bridge
  mongo:
    driver: bridge
  agoda-clone:
    driver: bridge
  kafka:
    driver: bridge
  redis:
    driver: bridge

volumes:
  mysql: